[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------< com.finnantech:finnantech-backend >------------------
[INFO] Building finnantech-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.2:run (default-cli) > test-compile @ finnantech-backend >>>
[INFO] 
[INFO] --- jacoco:0.8.11:prepare-agent (default) @ finnantech-backend ---
[INFO] argLine set to -javaagent:/Users/rafael.scane/.m2/repository/org/jacoco/org.jacoco.agent/0.8.11/org.jacoco.agent-0.8.11-runtime.jar=destfile=/Users/rafael.scane/Desktop/FinnantechV2/backend/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ finnantech-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 2 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ finnantech-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ finnantech-backend ---
[INFO] skip non existing resourceDirectory /Users/rafael.scane/Desktop/FinnantechV2/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ finnantech-backend ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.2:run (default-cli) < test-compile @ finnantech-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.2:run (default-cli) @ finnantech-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2025-06-11T14:49:32.283-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.finnantech.FinnantechApplication     : Starting FinnantechApplication using Java 17.0.14 with PID 27516 (/Users/rafael.scane/Desktop/FinnantechV2/backend/target/classes started by rafael.scane in /Users/rafael.scane/Desktop/FinnantechV2/backend)
2025-06-11T14:49:32.284-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] com.finnantech.FinnantechApplication     : Running with Spring Boot v3.2.2, Spring v6.1.3
2025-06-11T14:49:32.284-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.finnantech.FinnantechApplication     : No active profile set, falling back to 1 default profile: "default"
2025-06-11T14:49:32.318-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-11T14:49:32.318-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-11T14:49:33.291-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-11T14:49:33.343-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 47 ms. Found 4 JPA repository interfaces.
2025-06-11T14:49:34.239-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-11T14:49:34.250-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-11T14:49:34.251-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-06-11T14:49:34.292-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-06-11T14:49:34.293-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1975 ms
2025-06-11T14:49:34.418-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-11T14:49:34.556-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:finnantech user=SA
2025-06-11T14:49:34.557-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-11T14:49:34.566-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:finnantech'
2025-06-11T14:49:34.675-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-11T14:49:34.711-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2025-06-11T14:49:34.733-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-11T14:49:34.884-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-11T14:49:34.914-03:00  WARN 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-11T14:49:35.629-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-11T14:49:35.639-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists categories cascade 
2025-06-11T14:49:35.642-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists payment_methods cascade 
Hibernate: 
    drop table if exists payment_methods cascade 
2025-06-11T14:49:35.642-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists transactions cascade 
Hibernate: 
    drop table if exists transactions cascade 
2025-06-11T14:49:35.642-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-06-11T14:49:35.645-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create table categories (
        active boolean not null,
        is_system_default boolean not null,
        color varchar(7) not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id varchar(36) not null,
        user_id varchar(36),
        icon varchar(50),
        name varchar(100) not null,
        description TEXT,
        type varchar(255) not null check (type in ('RECEITA','DESPESA','INVESTIMENTO')),
        primary key (id)
    )
Hibernate: 
    create table categories (
        active boolean not null,
        is_system_default boolean not null,
        color varchar(7) not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id varchar(36) not null,
        user_id varchar(36),
        icon varchar(50),
        name varchar(100) not null,
        description TEXT,
        type varchar(255) not null check (type in ('RECEITA','DESPESA','INVESTIMENTO')),
        primary key (id)
    )
2025-06-11T14:49:35.653-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create table payment_methods (
        active boolean not null,
        card_closing_day integer check ((card_closing_day<=31) and (card_closing_day>=1)),
        card_due_day integer check ((card_due_day>=1) and (card_due_day<=31)),
        card_last_digits varchar(4),
        card_limit numeric(15,2),
        is_default boolean not null,
        card_expiry varchar(7),
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id varchar(36) not null,
        user_id varchar(36) not null,
        card_brand varchar(50),
        name varchar(100) not null,
        description TEXT,
        type varchar(255) not null check (type in ('CARTAO_CREDITO','CARTAO_DEBITO','PIX','DINHEIRO','TRANSFERENCIA','BOLETO')),
        primary key (id)
    )
Hibernate: 
    create table payment_methods (
        active boolean not null,
        card_closing_day integer check ((card_closing_day<=31) and (card_closing_day>=1)),
        card_due_day integer check ((card_due_day>=1) and (card_due_day<=31)),
        card_last_digits varchar(4),
        card_limit numeric(15,2),
        is_default boolean not null,
        card_expiry varchar(7),
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        id varchar(36) not null,
        user_id varchar(36) not null,
        card_brand varchar(50),
        name varchar(100) not null,
        description TEXT,
        type varchar(255) not null check (type in ('CARTAO_CREDITO','CARTAO_DEBITO','PIX','DINHEIRO','TRANSFERENCIA','BOLETO')),
        primary key (id)
    )
2025-06-11T14:49:35.656-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create table transactions (
        amount numeric(15,2) not null,
        currency varchar(3) not null,
        is_recurring boolean not null,
        transaction_date date not null,
        month_year varchar(7),
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        category_id varchar(36) not null,
        id varchar(36) not null,
        payment_method_id varchar(36),
        recurring_group_id varchar(36),
        user_id varchar(36) not null,
        merchant_category varchar(100),
        merchant_name varchar(150),
        description varchar(255) not null,
        external_id varchar(255),
        notes TEXT,
        status varchar(255) not null check (status in ('PENDENTE','CONFIRMADA','CANCELADA')),
        tags JSON,
        type varchar(255) not null check (type in ('RECEITA','DESPESA')),
        primary key (id)
    )
Hibernate: 
    create table transactions (
        amount numeric(15,2) not null,
        currency varchar(3) not null,
        is_recurring boolean not null,
        transaction_date date not null,
        month_year varchar(7),
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        category_id varchar(36) not null,
        id varchar(36) not null,
        payment_method_id varchar(36),
        recurring_group_id varchar(36),
        user_id varchar(36) not null,
        merchant_category varchar(100),
        merchant_name varchar(150),
        description varchar(255) not null,
        external_id varchar(255),
        notes TEXT,
        status varchar(255) not null check (status in ('PENDENTE','CONFIRMADA','CANCELADA')),
        tags JSON,
        type varchar(255) not null check (type in ('RECEITA','DESPESA')),
        primary key (id)
    )
2025-06-11T14:49:35.658-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create table users (
        email_verified boolean not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        provider varchar(20) not null check (provider in ('LOCAL','GOOGLE','FACEBOOK')),
        id varchar(36) not null,
        email varchar(100) not null unique,
        name varchar(100) not null,
        provider_id varchar(100),
        password_hash varchar(255),
        primary key (id)
    )
Hibernate: 
    create table users (
        email_verified boolean not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        provider varchar(20) not null check (provider in ('LOCAL','GOOGLE','FACEBOOK')),
        id varchar(36) not null,
        email varchar(100) not null unique,
        name varchar(100) not null,
        provider_id varchar(100),
        password_hash varchar(255),
        primary key (id)
    )
2025-06-11T14:49:35.660-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_categories_user_active 
       on categories (user_id, active)
Hibernate: 
    create index idx_categories_user_active 
       on categories (user_id, active)
2025-06-11T14:49:35.661-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_categories_type 
       on categories (type)
Hibernate: 
    create index idx_categories_type 
       on categories (type)
2025-06-11T14:49:35.662-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_categories_system_default 
       on categories (is_system_default)
Hibernate: 
    create index idx_categories_system_default 
       on categories (is_system_default)
2025-06-11T14:49:35.662-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_payment_methods_user 
       on payment_methods (user_id)
Hibernate: 
    create index idx_payment_methods_user 
       on payment_methods (user_id)
2025-06-11T14:49:35.663-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_payment_methods_type 
       on payment_methods (type)
Hibernate: 
    create index idx_payment_methods_type 
       on payment_methods (type)
2025-06-11T14:49:35.663-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_payment_methods_default 
       on payment_methods (user_id, is_default)
Hibernate: 
    create index idx_payment_methods_default 
       on payment_methods (user_id, is_default)
2025-06-11T14:49:35.664-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_user_date 
       on transactions (user_id, transaction_date desc)
Hibernate: 
    create index idx_transactions_user_date 
       on transactions (user_id, transaction_date desc)
2025-06-11T14:49:35.665-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_user_month 
       on transactions (user_id, month_year desc)
Hibernate: 
    create index idx_transactions_user_month 
       on transactions (user_id, month_year desc)
2025-06-11T14:49:35.666-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_category 
       on transactions (category_id)
Hibernate: 
    create index idx_transactions_category 
       on transactions (category_id)
2025-06-11T14:49:35.666-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_payment_method 
       on transactions (payment_method_id)
Hibernate: 
    create index idx_transactions_payment_method 
       on transactions (payment_method_id)
2025-06-11T14:49:35.667-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_type_date 
       on transactions (type, transaction_date desc)
Hibernate: 
    create index idx_transactions_type_date 
       on transactions (type, transaction_date desc)
2025-06-11T14:49:35.667-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_merchant 
       on transactions (merchant_name)
Hibernate: 
    create index idx_transactions_merchant 
       on transactions (merchant_name)
2025-06-11T14:49:35.668-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_recurring 
       on transactions (user_id, is_recurring)
Hibernate: 
    create index idx_transactions_recurring 
       on transactions (user_id, is_recurring)
2025-06-11T14:49:35.668-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_status 
       on transactions (status)
Hibernate: 
    create index idx_transactions_status 
       on transactions (status)
2025-06-11T14:49:35.668-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_transactions_user_type_date 
       on transactions (user_id, type, transaction_date desc)
Hibernate: 
    create index idx_transactions_user_type_date 
       on transactions (user_id, type, transaction_date desc)
2025-06-11T14:49:35.671-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-11T14:49:35.854-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-11T14:49:36.149-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] c.f.i.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-06-11T14:49:36.150-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-06-11T14:49:36.684-03:00  WARN 27516 --- [finnantech-backend] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-11T14:49:36.708-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] swordEncoderAuthenticationManagerBuilder : No authenticationProviders and no parentAuthenticationManager defined. Returning null.
2025-06-11T14:49:36.841-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 28 mappings in 'requestMappingHandlerMapping'
2025-06-11T14:49:36.943-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-11T14:49:37.053-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 4 endpoint(s) beneath base path '/actuator'
2025-06-11T14:49:37.120-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1b7594ab, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73cac0c3, org.springframework.security.web.context.SecurityContextHolderFilter@7706ebbe, org.springframework.security.web.header.HeaderWriterFilter@26c83172, org.springframework.web.filter.CorsFilter@26309df, org.springframework.security.web.authentication.logout.LogoutFilter@60cae3ae, com.finnantech.infrastructure.security.JwtAuthenticationFilter@17f8aa4f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@622c45b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3141b902, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f7817bf, org.springframework.security.web.session.SessionManagementFilter@46e8921, org.springframework.security.web.access.ExceptionTranslationFilter@4bd062a6, org.springframework.security.web.access.intercept.AuthorizationFilter@2490c6af]
2025-06-11T14:49:37.218-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-11T14:49:37.249-03:00 DEBUG 27516 --- [finnantech-backend] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-11T14:49:37.592-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-11T14:49:37.646-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/api'
2025-06-11T14:49:37.664-03:00  INFO 27516 --- [finnantech-backend] [  restartedMain] com.finnantech.FinnantechApplication     : Started FinnantechApplication in 5.699 seconds (process running for 6.012)
2025-06-11T14:50:03.840-03:00  INFO 27516 --- [finnantech-backend] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-11T14:50:03.841-03:00  INFO 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-11T14:50:03.841-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-11T14:50:03.841-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-11T14:50:03.841-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-11T14:50:03.842-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@26c2f88b
2025-06-11T14:50:03.842-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5983f389
2025-06-11T14:50:03.843-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-11T14:50:03.843-03:00  INFO 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-06-11T14:50:03.862-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-06-11T14:50:03.871-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-11T14:50:03.876-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
2025-06-11T14:50:03.877-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/login", parameters={}
2025-06-11T14:50:03.878-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.AuthController#authenticateUser(LoginRequest)
2025-06-11T14:50:03.935-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [LoginRequest[email=maria@teste.com, password=123456]]
2025-06-11T14:50:04.013-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T14:50:04.201-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-11T14:50:04.204-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [AuthResponse[token=eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbFZlcmlmaWVkIjp0cnVlLCJwcm92aWRlciI6IkxPQ0FMIiwibmFt (truncated)...]
2025-06-11T14:50:04.208-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T14:50:13.555-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/recent-transactions
2025-06-11T14:50:13.607-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T14:50:13.612-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/recent-transactions
2025-06-11T14:50:13.613-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/recent-transactions", parameters={}
2025-06-11T14:50:13.613-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getRecentTransactions(Authentication)
2025-06-11T14:50:13.625-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
2025-06-11T14:50:13.636-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-11T14:50:13.636-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@3694fafc]
2025-06-11T14:50:13.638-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T14:50:24.016-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/summary
2025-06-11T14:50:24.018-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T14:50:24.021-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/summary
2025-06-11T14:50:24.021-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/summary", parameters={}
2025-06-11T14:50:24.021-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getDashboardSummary(Authentication)
2025-06-11T14:50:24.028-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T14:50:24.033-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T14:50:24.035-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T14:50:24.036-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T14:50:24.038-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T14:50:24.039-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-11T14:50:24.040-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@8430647]
2025-06-11T14:50:24.045-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T14:50:33.894-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/categories/stats
2025-06-11T14:50:33.897-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T14:50:33.899-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/categories/stats
2025-06-11T14:50:33.899-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/categories/stats", parameters={}
2025-06-11T14:50:33.900-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getCategoryStats(Authentication)
2025-06-11T14:50:33.903-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
Hibernate: 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
2025-06-11T14:50:33.906-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T14:50:33.909-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-11T14:50:33.909-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@70a19e22]
2025-06-11T14:50:33.910-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/categories/stats
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/budgets
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/categories
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/summary
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/recent-transactions
2025-06-11T15:01:06.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/evolution
2025-06-11T15:01:06.781-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/summary
2025-06-11T15:01:06.782-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/recent-transactions
2025-06-11T15:01:06.783-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/categories
2025-06-11T15:01:06.783-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/categories/stats
2025-06-11T15:01:06.784-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/budgets
2025-06-11T15:01:06.784-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/evolution
2025-06-11T15:01:06.786-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /v1/categories
2025-06-11T15:01:06.788-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/budgets
2025-06-11T15:01:06.789-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/evolution
2025-06-11T15:01:06.789-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/recent-transactions
2025-06-11T15:01:06.789-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/categories/stats
2025-06-11T15:01:06.789-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/summary
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.798-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.804-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /v1/categories
2025-06-11T15:01:06.804-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/recent-transactions
2025-06-11T15:01:06.804-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/evolution
2025-06-11T15:01:06.804-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/categories/stats
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/budgets
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/categories/stats", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/budgets", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/evolution", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/summary
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/recent-transactions", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/categories", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/summary", parameters={}
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getMonthlyEvolution(Authentication)
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getCategoryStats(Authentication)
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getRecentTransactions(Authentication)
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.CategoryController#getAllCategories(Authentication)
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getBudgets(Authentication)
2025-06-11T15:01:06.805-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getDashboardSummary(Authentication)
2025-06-11T15:01:06.808-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.808-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@22b1f8d4]
2025-06-11T15:01:06.809-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.809-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
Hibernate: 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
2025-06-11T15:01:06.809-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.809-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
2025-06-11T15:01:06.809-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:01:06.812-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:01:06.812-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
Hibernate: 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
2025-06-11T15:01:06.812-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.813-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@6f3b586c]
2025-06-11T15:01:06.813-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.813-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/budgets
2025-06-11T15:01:06.814-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.817-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.817-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.817-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@3a83eb30]
2025-06-11T15:01:06.818-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/recent-transactions
2025-06-11T15:01:06.818-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.819-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.820-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.821-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.822-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.823-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/budgets
2025-06-11T15:01:06.823-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/categories/stats
2025-06-11T15:01:06.824-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/budgets", parameters={}
2025-06-11T15:01:06.824-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getBudgets(Authentication)
2025-06-11T15:01:06.825-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.826-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.826-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.826-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@5d64702a]
2025-06-11T15:01:06.827-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.827-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@69e5eb68]
2025-06-11T15:01:06.827-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.828-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.828-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/recent-transactions
2025-06-11T15:01:06.828-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/recent-transactions", parameters={}
2025-06-11T15:01:06.828-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.829-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.829-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getRecentTransactions(Authentication)
2025-06-11T15:01:06.830-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/summary
2025-06-11T15:01:06.831-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
2025-06-11T15:01:06.831-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@3c3bf96f]
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/categories/stats
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.834-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/categories/stats", parameters={}
2025-06-11T15:01:06.835-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getCategoryStats(Authentication)
2025-06-11T15:01:06.835-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.836-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.837-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@11c8980c]
2025-06-11T15:01:06.837-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.838-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
Hibernate: 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
2025-06-11T15:01:06.838-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/summary
2025-06-11T15:01:06.838-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/summary", parameters={}
2025-06-11T15:01:06.839-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getDashboardSummary(Authentication)
2025-06-11T15:01:06.839-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.839-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@451ceea1]
2025-06-11T15:01:06.841-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:01:06.841-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.842-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.842-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.846-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /v1/categories
2025-06-11T15:01:06.846-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.846-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/evolution
2025-06-11T15:01:06.847-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@5bac83da]
2025-06-11T15:01:06.847-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.848-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.851-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.851-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.851-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:01:06.853-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:01:06.854-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /v1/categories
2025-06-11T15:01:06.854-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/categories", parameters={}
2025-06-11T15:01:06.854-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/evolution
2025-06-11T15:01:06.854-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/evolution", parameters={}
2025-06-11T15:01:06.854-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.CategoryController#getAllCategories(Authentication)
2025-06-11T15:01:06.855-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getMonthlyEvolution(Authentication)
2025-06-11T15:01:06.855-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.856-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:01:06.856-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
Hibernate: 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
2025-06-11T15:01:06.858-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.858-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@4cfa9284]
2025-06-11T15:01:06.860-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.860-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.860-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.860-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@686d4185]
2025-06-11T15:01:06.862-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:01:06.863-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.865-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.866-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.868-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.870-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:01:06.872-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:01:06.872-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@358ecaea]
2025-06-11T15:01:06.873-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:05.007-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /auth/logout
2025-06-11T15:02:05.012-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /auth/logout
2025-06-11T15:02:05.015-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:05.018-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /auth/logout
2025-06-11T15:02:05.018-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/logout", parameters={}
2025-06-11T15:02:05.021-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-11T15:02:05.028-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.r.ResourceHttpRequestHandler     : Resource not found
2025-06-11T15:02:05.037-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource auth/logout.]
2025-06-11T15:02:05.037-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 404 NOT_FOUND
2025-06-11T15:02:05.047-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-06-11T15:02:05.048-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-06-11T15:02:05.048-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/api/error", parameters={}
2025-06-11T15:02:05.048-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-11T15:02:05.053-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:05.055-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Jun 11 15:02:05 BRT 2025, status=404, error=Not Found, trace=org.springframework.web. (truncated)...]
2025-06-11T15:02:05.092-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 404
2025-06-11T15:02:05.092-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-11T15:02:12.541-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /auth/login
2025-06-11T15:02:12.545-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-06-11T15:02:12.546-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-06-11T15:02:12.546-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
2025-06-11T15:02:12.547-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/login", parameters={}
2025-06-11T15:02:12.547-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.AuthController#authenticateUser(LoginRequest)
2025-06-11T15:02:12.549-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [LoginRequest[email=maria@teste.com, password=123456]]
2025-06-11T15:02:12.552-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.636-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.636-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [AuthResponse[token=eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbFZlcmlmaWVkIjp0cnVlLCJwcm92aWRlciI6IkxPQ0FMIiwibmFt (truncated)...]
2025-06-11T15:02:12.637-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.691-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/summary
2025-06-11T15:02:12.694-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/recent-transactions
2025-06-11T15:02:12.695-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/categories
2025-06-11T15:02:12.696-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/evolution
2025-06-11T15:02:12.696-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/categories/stats
2025-06-11T15:02:12.696-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/budgets
2025-06-11T15:02:12.703-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/summary
2025-06-11T15:02:12.704-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/recent-transactions
2025-06-11T15:02:12.705-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/categories
2025-06-11T15:02:12.705-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/categories/stats
2025-06-11T15:02:12.706-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/evolution
2025-06-11T15:02:12.706-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /v1/dashboard/budgets
2025-06-11T15:02:12.711-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/summary
2025-06-11T15:02:12.712-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/recent-transactions
2025-06-11T15:02:12.713-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/evolution
2025-06-11T15:02:12.713-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/budgets
2025-06-11T15:02:12.713-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/categories/stats
2025-06-11T15:02:12.714-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /v1/categories
2025-06-11T15:02:12.715-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.715-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.715-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.716-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.716-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.716-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/evolution
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/evolution", parameters={}
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/summary
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/budgets
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/recent-transactions
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/summary", parameters={}
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/budgets", parameters={}
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/recent-transactions", parameters={}
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getMonthlyEvolution(Authentication)
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getDashboardSummary(Authentication)
2025-06-11T15:02:12.718-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/categories/stats
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getRecentTransactions(Authentication)
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getBudgets(Authentication)
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/categories/stats", parameters={}
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /v1/categories
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getCategoryStats(Authentication)
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/categories", parameters={}
2025-06-11T15:02:12.719-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.CategoryController#getAllCategories(Authentication)
2025-06-11T15:02:12.720-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.720-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@7a1702dc]
2025-06-11T15:02:12.720-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
2025-06-11T15:02:12.720-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.720-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
Hibernate: 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
2025-06-11T15:02:12.721-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:02:12.721-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] org.hibernate.SQL                        : 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
2025-06-11T15:02:12.722-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.722-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@62938e89]
2025-06-11T15:02:12.723-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.724-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.724-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.724-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.724-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:02:12.727-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.727-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/recent-transactions
2025-06-11T15:02:12.727-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/budgets
2025-06-11T15:02:12.753-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.753-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@5763a84b]
2025-06-11T15:02:12.753-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.754-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.755-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.755-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@5b2867e0]
2025-06-11T15:02:12.755-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.755-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.755-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.756-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.756-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.757-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.757-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@2a7de6d6]
2025-06-11T15:02:12.758-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.759-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/categories/stats
2025-06-11T15:02:12.759-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.760-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/budgets
2025-06-11T15:02:12.760-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/recent-transactions
2025-06-11T15:02:12.760-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.761-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/budgets", parameters={}
2025-06-11T15:02:12.761-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/recent-transactions", parameters={}
2025-06-11T15:02:12.761-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getRecentTransactions(Authentication)
2025-06-11T15:02:12.761-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getBudgets(Authentication)
2025-06-11T15:02:12.761-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /v1/categories
2025-06-11T15:02:12.762-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.762-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@a65f6ef]
2025-06-11T15:02:12.762-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.763-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.763-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.763-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/summary
2025-06-11T15:02:12.765-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC 
    LIMIT
        :limit */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc 
        fetch
            first ? rows only
2025-06-11T15:02:12.765-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.766-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.766-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.766-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.766-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@682d7de7]
2025-06-11T15:02:12.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@1e1b69f8]
2025-06-11T15:02:12.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.767-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/categories/stats
2025-06-11T15:02:12.767-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/categories/stats", parameters={}
2025-06-11T15:02:12.767-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.768-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getCategoryStats(Authentication)
2025-06-11T15:02:12.769-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /v1/categories
2025-06-11T15:02:12.769-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/categories", parameters={}
2025-06-11T15:02:12.770-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.CategoryController#getAllCategories(Authentication)
2025-06-11T15:02:12.770-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.772-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /v1/dashboard/evolution
2025-06-11T15:02:12.772-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
Hibernate: 
    /* SELECT
        t.categoryId,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
    GROUP BY
        t.categoryId 
    ORDER BY
        SUM(t.amount) DESC */ select
            t1_0.category_id,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ? 
        group by
            t1_0.category_id 
        order by
            sum(t1_0.amount) desc
2025-06-11T15:02:12.772-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:02:12.772-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/summary
2025-06-11T15:02:12.772-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/summary", parameters={}
2025-06-11T15:02:12.773-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getDashboardSummary(Authentication)
2025-06-11T15:02:12.775-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] org.hibernate.SQL                        : 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
Hibernate: 
    /* SELECT
        c 
    FROM
        Category c 
    WHERE
        (
            c.userId = :userId 
            OR c.isSystemDefault = true
        ) 
        AND c.active = true 
    ORDER BY
        c.isSystemDefault DESC,
        c.type ASC,
        c.name ASC */ select
            c1_0.id,
            c1_0.active,
            c1_0.color,
            c1_0.created_at,
            c1_0.description,
            c1_0.icon,
            c1_0.is_system_default,
            c1_0.name,
            c1_0.type,
            c1_0.updated_at,
            c1_0.user_id 
        from
            categories c1_0 
        where
            (
                c1_0.user_id=? 
                or c1_0.is_system_default=true
            ) 
            and c1_0.active=true 
        order by
            c1_0.is_system_default desc,
            c1_0.type,
            c1_0.name
2025-06-11T15:02:12.775-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.775-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
Hibernate: 
    /* <criteria> */ select
        ue1_0.id,
        ue1_0.created_at,
        ue1_0.email,
        ue1_0.email_verified,
        ue1_0.name,
        ue1_0.password_hash,
        ue1_0.provider,
        ue1_0.provider_id,
        ue1_0.updated_at 
    from
        users ue1_0 
    where
        ue1_0.email=?
2025-06-11T15:02:12.776-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.776-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@51ed3e3]
2025-06-11T15:02:12.777-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.777-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.778-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /v1/dashboard/evolution
2025-06-11T15:02:12.779-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/v1/dashboard/evolution", parameters={}
2025-06-11T15:02:12.779-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.finnantech.infrastructure.web.controllers.DashboardController#getMonthlyEvolution(Authentication)
2025-06-11T15:02:12.779-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.779-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@1286c6d1]
2025-06-11T15:02:12.780-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'RECEITA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='RECEITA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.781-03:00 DEBUG 27516 --- [finnantech-backend] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.782-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
Hibernate: 
    /* SELECT
        COALESCE(SUM(t.amount), 0) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.type = 'DESPESA' 
        AND t.status = 'CONFIRMADA' 
        AND t.transactionDate BETWEEN :startDate AND :endDate */ select
            coalesce(sum(t1_0.amount), 0) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.type='DESPESA' 
            and t1_0.status='CONFIRMADA' 
            and t1_0.transaction_date between ? and ?
2025-06-11T15:02:12.782-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
Hibernate: 
    /* SELECT
        t.monthYear,
        t.type,
        SUM(t.amount) 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.status = 'CONFIRMADA' 
        AND t.monthYear >= :startMonthYear 
        AND t.monthYear <= :endMonthYear 
    GROUP BY
        t.monthYear,
        t.type 
    ORDER BY
        t.monthYear ASC,
        t.type ASC */ select
            t1_0.month_year,
            t1_0.type,
            sum(t1_0.amount) 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.status='CONFIRMADA' 
            and t1_0.month_year>=? 
            and t1_0.month_year<=? 
        group by
            t1_0.month_year,
            t1_0.type 
        order by
            t1_0.month_year,
            t1_0.type
2025-06-11T15:02:12.784-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.785-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.785-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.785-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@31d8be27]
2025-06-11T15:02:12.786-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:02:12.786-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.788-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.790-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.791-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.793-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] org.hibernate.SQL                        : 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
Hibernate: 
    /* SELECT
        t 
    FROM
        Transaction t 
    WHERE
        t.userId = :userId 
        AND t.transactionDate BETWEEN :startDate AND :endDate 
        AND t.status = 'CONFIRMADA' 
    ORDER BY
        t.transactionDate DESC,
        t.createdAt DESC */ select
            t1_0.id,
            t1_0.amount,
            t1_0.category_id,
            t1_0.created_at,
            t1_0.currency,
            t1_0.description,
            t1_0.external_id,
            t1_0.is_recurring,
            t1_0.merchant_category,
            t1_0.merchant_name,
            t1_0.month_year,
            t1_0.notes,
            t1_0.payment_method_id,
            t1_0.recurring_group_id,
            t1_0.status,
            t1_0.tags,
            t1_0.transaction_date,
            t1_0.type,
            t1_0.updated_at,
            t1_0.user_id 
        from
            transactions t1_0 
        where
            t1_0.user_id=? 
            and t1_0.transaction_date between ? and ? 
            and t1_0.status='CONFIRMADA' 
        order by
            t1_0.transaction_date desc,
            t1_0.created_at desc
2025-06-11T15:02:12.793-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-11T15:02:12.794-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.finnantech.infrastructure.web.dtos.ApiResponse@1e0b3db2]
2025-06-11T15:02:12.794-03:00 DEBUG 27516 --- [finnantech-backend] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-11T15:03:18.891-03:00  INFO 27516 --- [finnantech-backend] [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-11T15:03:18.894-03:00 DEBUG 27516 --- [finnantech-backend] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists categories cascade 
2025-06-11T15:03:18.897-03:00 DEBUG 27516 --- [finnantech-backend] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists payment_methods cascade 
Hibernate: 
    drop table if exists payment_methods cascade 
2025-06-11T15:03:18.897-03:00 DEBUG 27516 --- [finnantech-backend] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists transactions cascade 
Hibernate: 
    drop table if exists transactions cascade 
2025-06-11T15:03:18.898-03:00 DEBUG 27516 --- [finnantech-backend] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
2025-06-11T15:03:18.907-03:00  WARN 27516 --- [finnantech-backend] [ionShutdownHook] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-06-11T15:03:18.907-03:00  INFO 27516 --- [finnantech-backend] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-11T15:03:18.909-03:00  INFO 27516 --- [finnantech-backend] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
